<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>libsigc++: sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacesigc.html">sigc</a>::<a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;</a>
  </div>
</div>
<div class="contents">
<h1>sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt; Class Template Reference</h1><!-- doxytag: class="sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;" --><!-- doxytag: inherits="sigc::slot3" -->
<p>Convenience wrapper for the numbered <a class="el" href="classsigc_1_1slot3.html" title="Converts an arbitrary functor to a unified type which is opaque.">sigc::slot3</a> template. <a href="#_details">More...</a></p>

<p><code>#include &lt;sigc++/functors/slot.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;:</div>
<div class="dynsection">
<div class="center"><img src="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4__inherit__graph.png" border="0" usemap="#sigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="sigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4_inherit__map" id="sigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4_inherit__map">
<area shape="rect" href="classsigc_1_1slot3.html" title="Converts an arbitrary functor to a unified type which is opaque." alt="" coords="45,161,365,188"/><area shape="rect" href="classsigc_1_1slot__base.html" title="Base type for slots." alt="" coords="148,84,263,111"/><area shape="rect" href="structsigc_1_1functor__base.html" title="A hint to the compiler." alt="" coords="137,7,273,33"/></map>
<center><span class="legend">[<a href="graph_legend.html">legend</a>]</span></center></div>

<p><a href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4-members.html">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adbafac5ab39a4a017406ac9587c9511c"></a><!-- doxytag: member="sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;::parent_type" ref="adbafac5ab39a4a017406ac9587c9511c" args="" -->
typedef <a class="el" href="classsigc_1_1slot3.html">slot3</a>&lt; T_return, <br class="typebreak"/>
T_arg1, T_arg2, T_arg3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>parent_type</b></td></tr>
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T_functor &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01T__arg2_00_01T__arg3_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html#ad4a7fa0bed0b54da7faae18554d6d4f6">slot</a> (const T_functor&amp; _A_func)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a <a class="el" href="classsigc_1_1slot.html" title="Convenience wrapper for the numbered sigc::slot# templates.">slot</a> from an arbitrary functor. <a href="#ad4a7fa0bed0b54da7faae18554d6d4f6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a508b21923e1ef3d7d689984132d89360"></a><!-- doxytag: member="sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;::slot" ref="a508b21923e1ef3d7d689984132d89360" args="(const slot &amp;src)" -->
&#160;</td><td class="memItemRight" valign="bottom"><b>slot</b> (const <a class="el" href="classsigc_1_1slot.html">slot</a>&amp; src)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<h3>template &lt;class T_return, class T_arg1, class T_arg2, class T_arg3&gt;<br/>
 class sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;</h3>

<p>Convenience wrapper for the numbered <a class="el" href="classsigc_1_1slot3.html" title="Converts an arbitrary functor to a unified type which is opaque.">sigc::slot3</a> template. </p>
<p>See the base class for useful methods. This is the template specialization of the unnumbered <a class="el" href="classsigc_1_1slot.html" title="Convenience wrapper for the numbered sigc::slot# templates.">sigc::slot</a> template for 3 argument(s), specialized for different numbers of arguments This is possible because the template has default (nil) template types. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad4a7fa0bed0b54da7faae18554d6d4f6"></a><!-- doxytag: member="sigc::slot&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;::slot" ref="ad4a7fa0bed0b54da7faae18554d6d4f6" args="(const T_functor &amp;_A_func)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template &lt;class T_return , class T_arg1 , class T_arg2 , class T_arg3 &gt; </div>
<div class="memtemplate">
template &lt;class T_functor &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsigc_1_1slot.html">sigc::slot</a>&lt; T_return, T_arg1, T_arg2, T_arg3, nil, nil, nil, nil &gt;::<a class="el" href="classsigc_1_1slot.html">slot</a> </td>
          <td>(</td>
          <td class="paramtype">const T_functor &amp;&#160;</td>
          <td class="paramname"> <em>_A_func</em></td>
          <td>&#160;)&#160;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs a <a class="el" href="classsigc_1_1slot.html" title="Convenience wrapper for the numbered sigc::slot# templates.">slot</a> from an arbitrary functor. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>_A_func</em>&#160;</td><td>The desirer functor the new <a class="el" href="classsigc_1_1slot.html" title="Convenience wrapper for the numbered sigc::slot# templates.">slot</a> should be assigned to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Fri Jun 4 16:11:39 2010 for libsigc++ by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>

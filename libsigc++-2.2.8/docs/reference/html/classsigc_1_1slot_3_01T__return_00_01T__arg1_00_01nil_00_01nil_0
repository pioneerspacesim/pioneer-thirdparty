<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>libsigc++: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt; Member List</h1>This is the complete list of members for <a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#afb626f3bce53c7430ee4b5e00449837e">add_destroy_notify_callback</a>(void* data, func_destroy_notify func) const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>arg1_type_</b> typedef (defined in <a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a69042c2e2b0e5449fbf8203e862192a7">block</a>(bool should_block=true)</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a824a4b0b72b85c3b5fb0a9f479790d9e">blocked</a>() const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a9dc4958860c0f8300b461a743b7f2a2b">blocked_</a></td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a4042d221f7f07a7394d2eb0f14db2857">disconnect</a>()</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#aef88c874f0fc444ff4c5b783b12d2537">empty</a>() const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>func_destroy_notify</b> typedef (defined in <a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a>)</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a37e4b7151de10ac301eda9cd78d580bb">operator bool</a>() const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot1.html#a278a26f4629fb0beb286add4141c5ac8">operator()</a>(arg1_type_ _A_a1) const </td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot1.html#a2e0d65cfc434718b6c5f7d7135ac384e">operator=</a>(const slot1&amp; src)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>parent_type</b> typedef (defined in <a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a6374e1400eef020eab09dfdbdc563912">remove_destroy_notify_callback</a>(void* data) const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#aa482f7dfc73c6950abde0fd51b3125b5">rep_</a></td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td><code> [mutable]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>result_type</b> typedef (defined in <a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a2fb1bd8f20bd2c1f8514193a512d84eb">set_parent</a>(void* parent, void*(* cleanup)(void*)) const </td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>slot</b>() (defined in <a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html#a9f85db5c3dfa6ef4b5d3d07f5aa78548">slot</a>(const T_functor&amp; _A_func)</td><td><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>slot</b>(const slot&amp; src) (defined in <a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot_3_01T__return_00_01T__arg1_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_00_01nil_01_4.html">sigc::slot&lt; T_return, T_arg1, nil, nil, nil, nil, nil, nil &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>slot1</b>() (defined in <a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot1.html#abc5b60c5c3bf803b337f2a8f9c1ec5e5">slot1</a>(const T_functor&amp; _A_func)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>slot1</b>(const slot1&amp; src) (defined in <a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a>)</td><td><a class="el" href="classsigc_1_1slot1.html">sigc::slot1&lt; T_return, T_arg1 &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#a558d209f5e7330680b4a6f0e7894be3e">slot_base</a>()</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#aafce3e11630a5081208a4dd0d809e55f">slot_base</a>(rep_type* rep)</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td><code> [explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#aadcbb54832b5207bddf89ac5433b531a">slot_base</a>(const slot_base&amp; src)</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsigc_1_1slot__base.html#ad93eaf25fae13186a1af8f699c6004a1">unblock</a>()</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>~slot_base</b>() (defined in <a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a>)</td><td><a class="el" href="classsigc_1_1slot__base.html">sigc::slot_base</a></td><td></td></tr>
</table></div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Fri Jun 4 16:11:39 2010 for libsigc++ by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
